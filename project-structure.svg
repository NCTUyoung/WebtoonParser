<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- 定义渐变 -->
    <linearGradient id="mainGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#3498db" stop-opacity="0.8"/>
      <stop offset="100%" stop-color="#2980b9" stop-opacity="1"/>
    </linearGradient>
    <linearGradient id="rendererGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#2ecc71" stop-opacity="0.8"/>
      <stop offset="100%" stop-color="#27ae60" stop-opacity="1"/>
    </linearGradient>
    <linearGradient id="preloadGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#e74c3c" stop-opacity="0.8"/>
      <stop offset="100%" stop-color="#c0392b" stop-opacity="1"/>
    </linearGradient>
    <linearGradient id="componentGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#9b59b6" stop-opacity="0.8"/>
      <stop offset="100%" stop-color="#8e44ad" stop-opacity="1"/>
    </linearGradient>
    <linearGradient id="utilGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#f1c40f" stop-opacity="0.8"/>
      <stop offset="100%" stop-color="#f39c12" stop-opacity="1"/>
    </linearGradient>
    <linearGradient id="typeGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#1abc9c" stop-opacity="0.8"/>
      <stop offset="100%" stop-color="#16a085" stop-opacity="1"/>
    </linearGradient>
    
    <!-- 定义阴影 -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="3" dy="3" stdDeviation="3" flood-color="#333" flood-opacity="0.3"/>
    </filter>
  </defs>
  
  <style>
    .node rect { stroke-width: 2px; filter: url(#shadow); }
    .node text { font-family: 'Arial', sans-serif; font-size: 14px; }
    .edge { stroke: #2c3e50; stroke-width: 2px; }
    .title { font-family: 'Arial', sans-serif; font-size: 28px; font-weight: bold; fill: #2c3e50; }
    .subtitle { font-family: 'Arial', sans-serif; font-size: 16px; fill: #7f8c8d; }
    .file-node { fill: white; stroke: #bdc3c7; }
    .file-text { fill: #34495e; }
  </style>
  
  <!-- 背景 -->
  <rect width="1200" height="900" fill="#ecf0f1" rx="10" ry="10"/>
  
  <!-- 标题和副标题 -->
  <g transform="translate(600, 60)">
    <rect x="-250" y="-30" width="500" height="70" rx="10" fill="#f8f9fa" stroke="#e0e0e0" stroke-width="1"/>
    <text x="0" y="0" text-anchor="middle" class="title">Webtoon Parser 项目结构</text>
    <text x="0" y="30" text-anchor="middle" class="subtitle">基于 Electron 的三层架构设计</text>
  </g>
  
  <!-- 主要节点 -->
  <g transform="translate(600, 180)">
    <rect x="-60" y="-20" width="120" height="40" rx="8" class="node" fill="#ecf0f1" stroke="#3498db"/>
    <text x="0" y="5" text-anchor="middle" fill="#2c3e50" font-weight="bold">src</text>
    
    <!-- main 分支 -->
    <g transform="translate(-400, 120)">
      <rect x="-70" y="-25" width="140" height="50" rx="8" class="node" fill="url(#mainGradient)" stroke="#3498db"/>
      <text x="0" y="0" text-anchor="middle" fill="white" font-weight="bold">main</text>
      <text x="0" y="20" text-anchor="middle" fill="white" font-size="12">主进程</text>
      
      <g transform="translate(0, 100)">
        <rect x="-80" y="-20" width="160" height="40" rx="5" class="node file-node"/>
        <text x="0" y="5" text-anchor="middle" class="file-text">index.js</text>
        <text x="0" y="-8" text-anchor="middle" font-size="10" fill="#7f8c8d">应用入口</text>
      </g>
      
      <g transform="translate(0, 180)">
        <rect x="-80" y="-20" width="160" height="40" rx="5" class="node file-node"/>
        <text x="0" y="5" text-anchor="middle" class="file-text">webtoon.js</text>
        <text x="0" y="-8" text-anchor="middle" font-size="10" fill="#7f8c8d">核心抓取逻辑</text>
      </g>
    </g>
    
    <!-- renderer 分支 -->
    <g transform="translate(0, 120)">
      <rect x="-70" y="-25" width="140" height="50" rx="8" class="node" fill="url(#rendererGradient)" stroke="#2ecc71"/>
      <text x="0" y="0" text-anchor="middle" fill="white" font-weight="bold">renderer</text>
      <text x="0" y="20" text-anchor="middle" fill="white" font-size="12">渲染进程</text>
      
      <g transform="translate(0, 100)">
        <rect x="-80" y="-20" width="160" height="40" rx="5" class="node file-node"/>
        <text x="0" y="5" text-anchor="middle" class="file-text">App.vue</text>
        <text x="0" y="-8" text-anchor="middle" font-size="10" fill="#7f8c8d">主界面组件</text>
      </g>
      
      <g transform="translate(-280, 200)">
        <rect x="-80" y="-25" width="160" height="50" rx="8" class="node" fill="url(#componentGradient)" stroke="#9b59b6"/>
        <text x="0" y="0" text-anchor="middle" fill="white" font-weight="bold">components</text>
        <text x="0" y="20" text-anchor="middle" fill="white" font-size="12">UI组件</text>
      </g>
      
      <g transform="translate(0, 200)">
        <rect x="-80" y="-25" width="160" height="50" rx="8" class="node" fill="url(#utilGradient)" stroke="#f1c40f"/>
        <text x="0" y="0" text-anchor="middle" fill="white" font-weight="bold">utils</text>
        <text x="0" y="20" text-anchor="middle" fill="white" font-size="12">工具函数</text>
      </g>
      
      <g transform="translate(280, 200)">
        <rect x="-80" y="-25" width="160" height="50" rx="8" class="node" fill="url(#typeGradient)" stroke="#1abc9c"/>
        <text x="0" y="0" text-anchor="middle" fill="white" font-weight="bold">types</text>
        <text x="0" y="20" text-anchor="middle" fill="white" font-size="12">类型定义</text>
      </g>
    </g>
    
    <!-- preload 分支 -->
    <g transform="translate(400, 120)">
      <rect x="-70" y="-25" width="140" height="50" rx="8" class="node" fill="url(#preloadGradient)" stroke="#e74c3c"/>
      <text x="0" y="0" text-anchor="middle" fill="white" font-weight="bold">preload</text>
      <text x="0" y="20" text-anchor="middle" fill="white" font-size="12">预加载脚本</text>
      
      <g transform="translate(0, 100)">
        <rect x="-80" y="-20" width="160" height="40" rx="5" class="node file-node"/>
        <text x="0" y="5" text-anchor="middle" class="file-text">index.js</text>
        <text x="0" y="-8" text-anchor="middle" font-size="10" fill="#7f8c8d">IPC通信桥接</text>
      </g>
    </g>
    
    <!-- 连接线 - 使用曲线 -->
    <path d="M0,20 C0,50 -400,70 -400,95" class="edge" fill="none"/>
    <path d="M0,20 C0,50 0,70 0,95" class="edge" fill="none"/>
    <path d="M0,20 C0,50 400,70 400,95" class="edge" fill="none"/>
    
    <path d="M-400,145 C-400,155 -400,165 -400,180" class="edge" fill="none"/>
    <path d="M-400,145 C-400,155 -400,225 -400,260" class="edge" fill="none"/>
    
    <path d="M0,145 C0,155 0,165 0,180" class="edge" fill="none"/>
    <path d="M0,145 C0,155 -280,225 -280,275" class="edge" fill="none"/>
    <path d="M0,145 C0,155 0,225 0,275" class="edge" fill="none"/>
    <path d="M0,145 C0,155 280,225 280,275" class="edge" fill="none"/>
    
    <path d="M400,145 C400,155 400,165 400,180" class="edge" fill="none"/>
  </g>
  
  <!-- 图例 -->
  <g transform="translate(600, 600)">
    <rect x="150" y="-150" width="200" height="300" rx="10" stroke="#3498db" stroke-width="2" fill="white" filter="url(#shadow)"/>
    <text x="250" y="-120" text-anchor="middle" font-weight="bold" fill="#2c3e50" font-size="18">图例</text>
    
    <rect x="180" y="-90" width="30" height="30" fill="url(#mainGradient)" rx="5"/>
    <text x="220" y="-70" text-anchor="start" fill="#2c3e50" font-size="14">main (主进程)</text>
    
    <rect x="180" y="-40" width="30" height="30" fill="url(#rendererGradient)" rx="5"/>
    <text x="220" y="-20" text-anchor="start" fill="#2c3e50" font-size="14">renderer (渲染进程)</text>
    
    <rect x="180" y="10" width="30" height="30" fill="url(#preloadGradient)" rx="5"/>
    <text x="220" y="30" text-anchor="start" fill="#2c3e50" font-size="14">preload (预加载)</text>
    
    <rect x="180" y="60" width="30" height="30" fill="url(#componentGradient)" rx="5"/>
    <text x="220" y="80" text-anchor="start" fill="#2c3e50" font-size="14">components (组件)</text>
    
    <rect x="180" y="110" width="30" height="30" fill="url(#utilGradient)" rx="5"/>
    <text x="220" y="130" text-anchor="start" fill="#2c3e50" font-size="14">utils (工具函数)</text>
  </g>
  
  <!-- 底部信息 -->
  <text x="600" y="850" text-anchor="middle" fill="#7f8c8d" font-size="14">Webtoon Parser - Electron 应用程序结构图</text>
</svg> 